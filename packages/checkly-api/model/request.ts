/**
 * Checkly Public API
 * These are the docs for the newly released Checkly Public API.<br />If you have any questions, please do not hesitate to get in touch with us.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Assertion } from './assertion';
import { BasicAuth } from './basicAuth';
import { KeyValue } from './keyValue';

/**
* Determines the request that the check is going to run.
*/
export class Request {
    'method': Request.MethodEnum = Request.MethodEnum.Get;
    'url': string = 'https://api.checklyhq.com';
    'followRedirects'?: boolean;
    'skipSSL'?: boolean = false;
    'body'?: string = '';
    'bodyType'?: Request.BodyTypeEnum = Request.BodyTypeEnum.None;
    'headers'?: Array<KeyValue>;
    '_queryParameters'?: Array<KeyValue>;
    /**
    * Check the main Checkly documentation on assertions for specific values like regular expressions and JSON path descriptors you can use in the \"property\" field.
    */
    'assertions'?: Array<Assertion>;
    'basicAuth'?: BasicAuth;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "method",
            "baseName": "method",
            "type": "Request.MethodEnum"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "followRedirects",
            "baseName": "followRedirects",
            "type": "boolean"
        },
        {
            "name": "skipSSL",
            "baseName": "skipSSL",
            "type": "boolean"
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "string"
        },
        {
            "name": "bodyType",
            "baseName": "bodyType",
            "type": "Request.BodyTypeEnum"
        },
        {
            "name": "headers",
            "baseName": "headers",
            "type": "Array<KeyValue>"
        },
        {
            "name": "_queryParameters",
            "baseName": "queryParameters",
            "type": "Array<KeyValue>"
        },
        {
            "name": "assertions",
            "baseName": "assertions",
            "type": "Array<Assertion>"
        },
        {
            "name": "basicAuth",
            "baseName": "basicAuth",
            "type": "BasicAuth"
        }    ];

    static getAttributeTypeMap() {
        return Request.attributeTypeMap;
    }
}

export namespace Request {
    export enum MethodEnum {
        Get = <any> 'GET',
        Post = <any> 'POST',
        Put = <any> 'PUT',
        Head = <any> 'HEAD',
        Delete = <any> 'DELETE',
        Patch = <any> 'PATCH'
    }
    export enum BodyTypeEnum {
        Json = <any> 'JSON',
        Form = <any> 'FORM',
        Raw = <any> 'RAW',
        Graphql = <any> 'GRAPHQL',
        None = <any> 'NONE'
    }
}
