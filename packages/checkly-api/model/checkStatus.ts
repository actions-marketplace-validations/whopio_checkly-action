/**
 * Checkly Public API
 * These are the docs for the newly released Checkly Public API.<br />If you have any questions, please do not hesitate to get in touch with us.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class CheckStatus {
    /**
    * The name of the check.
    */
    'name': string;
    /**
    * The ID of check this status belongs to.
    */
    'checkId'?: string;
    /**
    * Describes if this check is currently failing. If any of the assertions for an API checkfail this value is true. If a browser check fails for whatever reason, this is true.
    */
    'hasFailures'?: boolean;
    /**
    * Describes if due to some error outside of normal operation this check is failing. This should be extremely rare and only when there is an error in the Checkly backend.
    */
    'hasErrors'?: boolean;
    /**
    * A check is degraded if it is over the degradation limit set by the \"degradedResponseTime\" field on the check. Applies only to API checks.
    */
    'isDegraded'?: boolean;
    /**
    * The longest ever recorded response time for this check.
    */
    'longestRun'?: number;
    /**
    * The shortest ever recorded response time for this check.
    */
    'shortestRun'?: number;
    /**
    * What location this check was last run at.
    */
    'lastRunLocation'?: string;
    /**
    * The unique incrementing ID for each check run.
    */
    'lastCheckRunId'?: string;
    /**
    * How many days remain till the current SSL certificate expires.
    */
    'sslDaysRemaining'?: number;
    'createdAt'?: string;
    'updatedAt'?: Date;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "checkId",
            "baseName": "checkId",
            "type": "string"
        },
        {
            "name": "hasFailures",
            "baseName": "hasFailures",
            "type": "boolean"
        },
        {
            "name": "hasErrors",
            "baseName": "hasErrors",
            "type": "boolean"
        },
        {
            "name": "isDegraded",
            "baseName": "isDegraded",
            "type": "boolean"
        },
        {
            "name": "longestRun",
            "baseName": "longestRun",
            "type": "number"
        },
        {
            "name": "shortestRun",
            "baseName": "shortestRun",
            "type": "number"
        },
        {
            "name": "lastRunLocation",
            "baseName": "lastRunLocation",
            "type": "string"
        },
        {
            "name": "lastCheckRunId",
            "baseName": "lastCheckRunId",
            "type": "string"
        },
        {
            "name": "sslDaysRemaining",
            "baseName": "sslDaysRemaining",
            "type": "number"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date"
        }    ];

    static getAttributeTypeMap() {
        return CheckStatus.attributeTypeMap;
    }
}

